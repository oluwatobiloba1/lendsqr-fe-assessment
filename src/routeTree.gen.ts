/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutUsersIndexImport } from './routes/_layout/users/index'
import { Route as LayoutUsersLayoutImport } from './routes/_layout/users/_layout'
import { Route as LayoutUsersLayoutUserIdIndexImport } from './routes/_layout/users/_layout/$userId/index'
import { Route as LayoutUsersLayoutUserIdDocumentsImport } from './routes/_layout/users/_layout/$userId/documents'

// Create Virtual Routes

const LayoutUsersImport = createFileRoute('/_layout/users')()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutUsersRoute = LayoutUsersImport.update({
  path: '/users',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUsersIndexRoute = LayoutUsersIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutUsersRoute,
} as any)

const LayoutUsersLayoutRoute = LayoutUsersLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => LayoutUsersRoute,
} as any)

const LayoutUsersLayoutUserIdIndexRoute =
  LayoutUsersLayoutUserIdIndexImport.update({
    path: '/$userId/',
    getParentRoute: () => LayoutUsersLayoutRoute,
  } as any)

const LayoutUsersLayoutUserIdDocumentsRoute =
  LayoutUsersLayoutUserIdDocumentsImport.update({
    path: '/$userId/documents',
    getParentRoute: () => LayoutUsersLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/users': {
      id: '/_layout/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof LayoutUsersImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/users/_layout': {
      id: '/_layout/users/_layout'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof LayoutUsersLayoutImport
      parentRoute: typeof LayoutUsersRoute
    }
    '/_layout/users/': {
      id: '/_layout/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof LayoutUsersIndexImport
      parentRoute: typeof LayoutUsersImport
    }
    '/_layout/users/_layout/$userId/documents': {
      id: '/_layout/users/_layout/$userId/documents'
      path: '/$userId/documents'
      fullPath: '/users/$userId/documents'
      preLoaderRoute: typeof LayoutUsersLayoutUserIdDocumentsImport
      parentRoute: typeof LayoutUsersLayoutImport
    }
    '/_layout/users/_layout/$userId/': {
      id: '/_layout/users/_layout/$userId/'
      path: '/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof LayoutUsersLayoutUserIdIndexImport
      parentRoute: typeof LayoutUsersLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  LayoutRoute: LayoutRoute.addChildren({
    LayoutUsersRoute: LayoutUsersRoute.addChildren({
      LayoutUsersLayoutRoute: LayoutUsersLayoutRoute.addChildren({
        LayoutUsersLayoutUserIdDocumentsRoute,
        LayoutUsersLayoutUserIdIndexRoute,
      }),
      LayoutUsersIndexRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/users"
      ]
    },
    "/_layout/users": {
      "filePath": "_layout/users",
      "parent": "/_layout",
      "children": [
        "/_layout/users/_layout",
        "/_layout/users/"
      ]
    },
    "/_layout/users/_layout": {
      "filePath": "_layout/users/_layout.tsx",
      "parent": "/_layout/users",
      "children": [
        "/_layout/users/_layout/$userId/documents",
        "/_layout/users/_layout/$userId/"
      ]
    },
    "/_layout/users/": {
      "filePath": "_layout/users/index.tsx",
      "parent": "/_layout/users"
    },
    "/_layout/users/_layout/$userId/documents": {
      "filePath": "_layout/users/_layout/$userId/documents.tsx",
      "parent": "/_layout/users/_layout"
    },
    "/_layout/users/_layout/$userId/": {
      "filePath": "_layout/users/_layout/$userId/index.tsx",
      "parent": "/_layout/users/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
